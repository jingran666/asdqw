## **생명주기란 무엇인가요?**

- **생명주기(Lifecycle)**란, 컴포넌트가 생성되고, 업데이트되며, 삭제되는 일련의 과정을 의미합니다.

## **컴포넌트의 마운팅 단계에서 호출되는 생명주기 메서드는 무엇인가요?**

- 컴포넌트의 마운팅 단계는 컴포넌트가 처음 DOM에 추가될 때 발생합니다.
constructor(): 컴포넌트 초기화
static getDerivedStateFromProps(): props에 따른 상태 업데이트
render(): UI 렌더링
componentDidMount(): DOM에 마운트된 후, 한 번만 실행
함수형 컴포넌트에서는 useEffect() Hook을 사용하여 마운트 후 실행할 작업을 정의할 수 있습니다.

## **클래스 컴포넌트와 함수형 컴포넌트의 주요 차이점은 무엇인가요?**

- 클래스 컴포넌트와 함수형 컴포넌트는 React에서 컴포넌트를 작성하는 두 가지 주요 방식입니다. 두 방식은 기본적인 구조와 상태 관리 방식에서 차이가 있습니다

## **`componentDidMount()` 메서드의 주요 역할은 무엇인가요?**

- componentDidMount() 메서드는 React 클래스형 컴포넌트에서 사용되는 생명주기 메서드 중 하나로, 컴포넌트가 DOM에 마운트된 직후에 호출됩니다. 즉, 컴포넌트가 화면에 렌더링되어 DOM에 추가된 후에 한 번만 호출됩니다.

# **`useEffect` Hook은 어떤 생명주기 단계에 해당하나요?**

- useEffect Hook은 React 함수형 컴포넌트에서 사용되는 Hook으로, 컴포넌트의 생명주기 중 특정 단계에 해당하는 작업을 처리하는 데 사용됩니다. useEffect는 마운팅(Mounting), 업데이트(Updating), 언마운팅(Unmounting) 단계에서 동작할 수 있습니다. 각각의 생명주기 단계에 대한 동작은 useEffect의 의존성 배열에 따라 달라집니다.

## **클래스 컴포넌트에서 상태를 초기화하는 메서드는 무엇인가요?**

- 클래스 컴포넌트에서 **상태(state)**를 초기화하는 메서드는 **constructor()**입니다.

## **함수형 컴포넌트에서 상태 관리를 위해 사용하는 Hook은 무엇인가요?**

- 함수형 컴포넌트에서 상태 관리를 위해 사용하는 Hook은 **useState**입니다

### **`componentWillUnmount()` 메서드는 언제 호출되나요?**

- componentWillUnmount() 메서드는 React 클래스형 컴포넌트에서 컴포넌트가 언마운트되기 직전에 호출되는 생명주기 메서드입니다. 즉, 컴포넌트가 DOM에서 제거될 때, 즉 화면에서 사라질 때 호출됩니다.

## **`shouldComponentUpdate()` 메서드는 어떤 역할을 하나요?**

- shouldComponentUpdate() 메서드는 React 클래스형 컴포넌트에서 사용되는 생명주기 메서드 중 하나로, 컴포넌트가 업데이트될지 말지를 결정하는 역할을 합니다. 이 메서드는 컴포넌트의 **props**나 **state**가 변경될 때, 렌더링을 수행할지 여부를 최적화하는 데 사용됩니다.

## **에러 경계를 설정하기 위해 사용하는 컴포넌트는 무엇인가요?**

- React에서 **에러 경계(Error Boundary)**를 설정하기 위해 사용하는 컴포넌트는 **ErrorBoundary**입니

## **`getSnapshotBeforeUpdate()` 메서드는 어떤 상황에서 사용되나요?**

- getSnapshotBeforeUpdate() 메서드는 React 클래스형 컴포넌트에서 사용되는 생명주기 메서드 중 하나로, 컴포넌트가 업데이트되기 직전에 호출됩니다

## **`useState` Hook의 기본 사용법을 설명해주세요.**

- 
useState는 React의 Hook 중 하나로, 함수형 컴포넌트에서 상태를 관리할 수 있도록 해줍니다. useState를 사용하면 상태 변수를 선언하고, 그 값을 업데이트하는 함수도 함께 제공합니다.

## **클래스 컴포넌트에서 `render()` 메서드의 역할은 무엇인가요?**

- 클래스 컴포넌트에서 render() 메서드는 컴포넌트의 UI를 정의하고 반환하는 역할을 합니다. 이 메서드는 React 컴포넌트가 화면에 어떻게 표시될지를 결정하는 핵심 메서드로, 컴포넌트의 구성 요소를 JSX 형태로 반환합니다.

## **`componentDidCatch()` 메서드는 어떤 목적으로 사용되나요?**

- componentDidCatch() 메서드는 React에서 **에러 경계(Error Boundary)**를 설정할 때 사용되는 생명주기 메서드입니다. 이 메서드는 자식 컴포넌트에서 발생한 오류를 포착하고, 해당 오류를 처리하는 데 사용됩니다. 

## **함수형 컴포넌트에서 생명주기 메서드를 대체하는 Hook은 무엇인가요?**
함수형 컴포넌트에서 생명주기 메서드를 대체하는 Hook은 **useEffect**입니다
